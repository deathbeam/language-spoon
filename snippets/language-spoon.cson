'.source.spoon, .dyn.caret.begin.document':
  '#!/usr/bin/env spoon':
    'prefix': 'spoon'
    'body': '#!/usr/bin/env spoon\n'
'.source.spoon':
  'Block comment':
    'prefix': '###'
    'body': '###\n$1\n### $0'
  'Array comprehension':
    'prefix': 'fora'
    'body': 'for ${1:name} in ${2:array}\n  ${0:# body...}'
  'Procedure':
    'prefix': 'pro'
    'body': '(${1:args}) =>\n  ${0:# body...}'
  'Class':
    'prefix': 'cla'
    'body': 'class ${1:ClassName}${2: extends ${3:Ancestor}}\n\n  ${4:new: (${5:args}) =>\n    ${6:# body...}}\n  $7'
  'Else if':
    'prefix': 'elif'
    'body': 'else if ${1:condition}\n  ${0:# body...}'
  'Function':
    'prefix': 'fun'
    'body': '(${1:args}) ->\n  ${0:# body...}\n\n'
  'If .. Else':
    'prefix': 'ife'
    'body': 'if ${1:condition}\n  ${2:# body...}\nelse\n  ${3:# body...}'
  'If':
    'prefix': 'if'
    'body': 'if ${1:condition}\n  ${0:# body...}'
  'Object comprehension':
    'prefix': 'foro'
    'body': 'for ${1:key}, ${2:value} of ${3:Object}\n  ${0:# body...}'
  'Range comprehension (exclusive)':
    'prefix': 'forrex'
    'body': 'for ${1:name} in [${2:start}...${3:finish}]${4: by ${5:step}}\n  ${0:# body...}'
  'Range comprehension (inclusive)':
    'prefix': 'forr'
    'body': 'for ${1:name} in [${2:start}..${3:finish}]${4: by ${5:step}}\n  ${0:# body...}'
  'Switch':
    'prefix': 'swi'
    'body': 'switch ${1:object}\n  when ${2:value}\n    ${0:# body...}'
  'Ternary If':
    'prefix': 'ifte'
    'body': 'if ${1:condition} do ${2:value} else ${3:other}'
  'Try .. Catch':
    'prefix': 'try'
    'body': 'try\n  $1\ncatch ${2:error}\n  $3'
  'Unless':
    'prefix': 'unl'
    'body': 'unless ${1:condition}\n  ${0:# body...}'
  'Until':
    'prefix': 'unt'
    'body': 'until ${1:condition}\n  ${0:# body...}'
  'While':
    'prefix': 'whi'
    'body': 'while ${1:condition}\n  ${0:# body...}'
  'Subheader':
    'prefix': '/3'
    'body': '# $1\n# -------------------------\n$0'
  'Import':
    'prefix': 'imp'
    'body': 'import ${1:module}'
  'Range array':
    'prefix': 'ra',
    'body': '[[$1, $2], [$3, $4]]'
  'Point array':
    'prefix': 'pt',
    'body': '[$1, $2]'
  'Key-value pair':
    'prefix': 'kv',
    'body': '${1:"${2:key}"}: ${3:value}'
'.string.quoted.double.spoon:not(.string .source), .string.quoted.double.heredoc.spoon:not(.string .source)':
  'Interpolated Code':
    'prefix': '#'
    'body': '#{$1}$2'
